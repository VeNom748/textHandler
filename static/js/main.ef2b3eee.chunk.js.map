{"version":3,"sources":["Componens/Alert.js","Componens/Navbar.js","Componens/Textarea.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","role","style","padding","position","width","type","msg","Navbar","changeTheme","e","target","name","toggleMode","mode","href","title","id","backgroundColor","color","onClick","placeholder","defaultProps","about","Textarea","useState","text","settext","rows","value","onChange","preventDefault","newtext","toUpperCase","setAlert","toLowerCase","document","getElementById","select","execCommand","length","split","App","setmode","setalert","showAlert","message","setTimeout","Theme","height","window","innerWidth","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ef2b3eee.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Alert = (props) => {\r\n  const zIndex = {\r\n    padding: \"10px\",\r\n    position: \"fixed\",\r\n    width: \"100%\"\r\n  }\r\n  return (\r\n    props.alert && \r\n    <div className=\"alert alert-warning alert-dismissible fade show \" role=\"alert\" style={zIndex}>\r\n        <strong>{props.alert.type} {props.alert.msg}</strong> \r\n      </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navbar = (props) => {\r\n  const changeTheme = (e) => {\r\n    if (e.target.name === \"#282727de\") {\r\n      props.toggleMode(\"#282727de\");\r\n    } else if (e.target.name === \"#fff\") {\r\n      props.toggleMode(\"#fff\");\r\n    }else if (e.target.name === \"#00001c\") {\r\n      props.toggleMode(\"#00001c\");\r\n    }else if (e.target.name === \"#7a7b81\") {\r\n      props.toggleMode(\"#7a7b81\");\r\n    }else if (e.target.name === \"#083429\") {\r\n      props.toggleMode(\"#083429\");\r\n    }else if (e.target.name === \"#6a0000\") {\r\n      props.toggleMode(\"#6a0000\");\r\n    }else if (e.target.name === \"#ff8801\") {\r\n      props.toggleMode(\"#ff8801\");\r\n    }else if (e.target.name === \"#00a9e3\") {\r\n      props.toggleMode(\"#00a9e3\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg  navbar-${\r\n        props.mode === \"dark\" ? \"light\" : \"dark\"\r\n      } bg-${props.mode === \"dark\" ? \"light\" : \"dark\"}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n        <h3 className=\"mb-0\">\r\n            {props.title}\r\n        </h3>\r\n          </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n       \r\n          </ul>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn me-3 ps-2 pe-2 border border-light mb-2\"\r\n            style={{ backgroundColor: \"#000068\", color: \"white\" }}\r\n            onClick={changeTheme}\r\n            name=\"#00001c\"\r\n          >\r\n            Theme1\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary me-3  ps-2 pe-2 border border-light mb-2\"\r\n            onClick={changeTheme}\r\n            name=\"#7a7b81\"\r\n          >\r\n            Theme2\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success me-3  ps-2 pe-2 border border-light mb-2\"\r\n            onClick={changeTheme}\r\n            name=\"#083429\"\r\n          >\r\n            Theme3 \r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger me-3  ps-2 pe-2 border border-light mb-2\"\r\n            onClick={changeTheme}\r\n            name=\"#6a0000\"\r\n          >\r\n            Theme4\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning me-3  ps-2 pe-2 border border-light mb-2\"\r\n            onClick={changeTheme}\r\n            name=\"#ff8801\"\r\n          >\r\n            Theme5\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info me-3  ps-2 pe-2 border border-light mb-2\"\r\n            onClick={changeTheme}\r\n            name=\"#00a9e3\"\r\n          >\r\n            Theme6\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light me-3  ps-2 pe-2 border border-light mb-2\"\r\n            onClick={changeTheme}\r\n            name=\"#fff\"\r\n          >\r\n            Theme7\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-dark me-3  ps-2 pe-2 border border-light mb-2\"\r\n            style={{ backgroundColor: \"#282727de\", color: \"white\" }}\r\n            onClick={changeTheme}\r\n            name=\"#282727de\"\r\n          >\r\n            Theme8\r\n          </button>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"TextHandlersD\",\r\n  about: \"About\",\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textarea(props) {\r\n  const [text, settext] = useState(\"\");\r\n\r\n  const updateText = (e) => {\r\n    settext(e.target.value);\r\n  };\r\n\r\n  const handleupEvent = (e) => {\r\n    e.preventDefault();\r\n    if (text !== \"\") {\r\n      let newtext = text.toUpperCase();\r\n      settext(newtext);\r\n    } else {\r\n      props.setAlert(\r\n        \"Please type somthing in textbox in order to perform this task\",\r\n        \"Warning\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handledownEvent = (e) => {\r\n    e.preventDefault();\r\n    if (text !== \"\") {\r\n      let newtext = text.toLowerCase();\r\n      settext(newtext);\r\n    } else {\r\n      props.setAlert(\r\n        \"Please type somthing in textbox in order to perform this task\",\r\n        \"Warning\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleclearEvent = (e) => {\r\n    e.preventDefault();\r\n    if (text !== \"\") {\r\n      settext(\"\");\r\n    } else {\r\n      props.setAlert(\r\n        \"Please type somthing in textbox in order to perform this task\",\r\n        \"Warning\"\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  const handleCopy = (e) => {\r\n    e.preventDefault();\r\n      var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n      text.select();\r\n      document.execCommand(\"copy\");\r\n      props.setAlert(\"Copied\", \"Success\");\r\n    \r\n  };\r\n\r\n\r\n  return (\r\n    <div >\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <h2 className=\"mt-3 mb-3\">Enter the Text to Analyze</h2>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"10\"\r\n            value={text}\r\n            onChange={updateText}\r\n          ></textarea>\r\n          <div className=\"convertBtns\">\r\n            <button\r\n              className=\"btn btn-primary  mt-3 mb-3 me-3\"\r\n              onClick={handleupEvent}\r\n            >\r\n              Convert to UpperCase\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary  mt-3 mb-3 me-3\"\r\n              onClick={handledownEvent}\r\n            >\r\n              Convert to LowerCase\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn btn-success  mt-3 mb-3 me-3\"\r\n              onClick={handleCopy}\r\n            >\r\n              Copy Text\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger  mt-3 mb-3 me-3\"\r\n              onClick={handleclearEvent}\r\n            >\r\n              Clear Text\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div className=\"container\">\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {text.length > 0 ? text.split(\" \").length : \"0\"} Words , {text.length}{\" \"}\r\n          Characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minute to read</p>\r\n        <h3>Preview</h3>\r\n        <p className=\"mb-0 pb-3\">{text !== \"\" ? text : \"Enter your text.....\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Alert } from \"./Componens/Alert\";\nimport Navbar from \"./Componens/Navbar\";\nimport Textarea from \"./Componens/Textarea\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"#fff\");\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  };\n\n  const toggleTheme = (theme) => {\n    setmode(theme);\n  };\n  const Theme = {\n    backgroundColor: mode,\n    color: mode===\"#fff\" ? \"#000\" : \"#FFF\",\n    height : window.innerWidth < 992 ? \"fit-content\" : \"100vh\"\n  }\n\n  return (\n    <div style={Theme}>\n\n      <Navbar\n        title=\"TextHandler\"\n        about=\"About us\"\n        mode={mode}\n        toggleMode={toggleTheme}\n        setAlert={showAlert}\n      />\n\n      <Alert alert={alert} />\n\n      <div className=\"container\">\n        <Textarea setAlert={showAlert} mode={mode}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}